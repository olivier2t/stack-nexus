# YAML anchors
shared:
  # Task : sync and merge with rsync 2 rep. Used to merge stack and config
  - &merge-stack-and-config
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: cycloid/cycloid-toolkit
        tag: latest
    run:
      path: /usr/bin/merge-stack-and-config
    outputs:
      - name: merged-stack
        path: "merged-stack"

resource_types:
  - name: terraform
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
      tag: ((terraform_version))

resources:
  # The Terraform stack (will be merged with the config)
  - name: git_stack-terraform
    type: git
    icon: git
    source:
      uri: ((stack_git_repository))
      branch: ((stack_git_branch))
      paths:
        - ((stack_terraform_path))/*

  # The Terraform config (will be merged with the stack)
  - name: git_config-terraform
    type: git
    icon: git
    source:
      uri: ((config_git_repository))
      branch: ((config_git_branch))
      private_key: ((config_git_private_key))
      paths:
        - ((config_terraform_path))/*

  # The Ansible stack (will be merged with the config)
  - name: git_stack-ansible
    type: git
    icon: git
    source:
      uri: ((stack_git_repository))
      branch: ((stack_git_branch))
      paths:
        - ((stack_ansible_path))/*

  # The Ansible config (will be merged with the stack)
  - name: git_config-ansible
    type: git
    icon: git
    source:
      uri: ((config_git_repository))
      branch: ((config_git_branch))
      private_key: ((config_git_private_key))
      paths:
        - ((config_ansible_path))/*

  - name: tfstate
    type: terraform
    icon: terraform
    source:
      env_name: ((env))
      backend_type: s3
      backend_config:
        bucket: ((terraform_storage_bucket_name))
        key: ((project))-((env)).tfstate
        workspace_key_prefix: ((project))
        region: ((aws_region))
        access_key: ((aws_access_key))
        secret_key: ((aws_secret_key))
      vars:
        aws_access_key: ((aws_access_key))
        aws_secret_key: ((aws_secret_key))
        aws_region: ((aws_region))
        terraform_storage_bucket_name: ((terraform_storage_bucket_name))
        keypair_public: ((keypair_public))
        instance_type: ((instance_type))
        disk_size: ((disk_size))
        ebs_optimized: ((ebs_optimized))
        env: ((env))
        project: ((project))
        customer: ((customer))
      env:
        AWS_ACCESS_KEY_ID: ((aws_access_key))
        AWS_DEFAULT_REGION: ((aws_region))
        AWS_SECRET_ACCESS_KEY: ((aws_secret_key))

groups:
  - name: overview
    jobs:
      - terraform-plan
      - terraform-apply
      
  - name: destroy
    jobs:
      - terraform-destroy

jobs:
  # Merge and trigger a plan whenever there is a commit in Terraform stack or config
  - name: terraform-plan
    serial: true
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - in_parallel:
        - get: git_stack-terraform
          trigger: true

        - get: git_config-terraform
          trigger: true

      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: git_config-terraform
            path: "config"
          - name: git_stack-terraform
            path: "stack"
        params:
          CONFIG_PATH: ((config_terraform_path))
          STACK_PATH: ((stack_terraform_path))

      - put: tfstate
        params:
          plan_only: true
          terraform_source: merged-stack/

  # Merge and trigger an apply manually (no autostart of this job)
  - name: terraform-apply
    serial: true
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - in_parallel:
        - get: git_stack-terraform
          trigger: false
          passed:
            - terraform-plan

        - get: git_config-terraform
          trigger: false
          passed:
            - terraform-plan

        - get: tfstate
          trigger: true
          passed:
            - terraform-plan

      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: git_config-terraform
            path: "config"
          - name: git_stack-terraform
            path: "stack"
        params:
          CONFIG_PATH: ((config_terraform_path))
          STACK_PATH: ((stack_terraform_path))

      - put: tfstate
        params:
          plan_run: true
          terraform_source: merged-stack/

  - name: terraform-destroy
    serial: true
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - in_parallel:
        - get: git_stack-terraform
          trigger: false

        - get: git_config-terraform
          trigger: false

      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: git_config-terraform
            path: "config"
          - name: git_stack-terraform
            path: "stack"
        params:
          CONFIG_PATH: ((config_terraform_path))
          STACK_PATH: ((stack_terraform_path))

      - put: tfstate
        params:
          action: destroy
          terraform_source: merged-stack/
        get_params:
          action: destroy

  # - name: deploy-nexus
  #   serial: true
  #   build_logs_to_retain: 10
  #   plan:
  #     - in_parallel:
  #       - get: git_stack-ansible
  #         params: {depth: 1}
  #         trigger: false

  #       - get: git_config-ansible
  #         params: {depth: 1}
  #         trigger: false

  #       - get: tfstate
  #         trigger: true
  #         passed:
  #           - terraform-apply

  #     - task: merge-stack-and-config
  #       config:
  #         <<: *merge-stack-and-config
  #         inputs:
  #         - name: git_config-ansible
  #           path: "config"
  #         - name: git_stack-ansible
  #           path: "stack"
  #       params:
  #         CONFIG_PATH: ((config_ansible_path))
  #         STACK_PATH: ((stack_ansible_path))

  #     - task: run-ansible
  #       config:
  #         platform: linux
  #         image_resource:
  #           type: docker-image
  #           source:
  #             repository: cycloid/cycloid-toolkit
  #             tag: ((ansible_version))
  #         run:
  #           path: /usr/bin/ansible-runner
  #         caches:
  #           - path: ansible-playbook/roles
  #         inputs:
  #           - name: merged-stack
  #             path: ansible-playbook
  #       params: ((ansible_params))